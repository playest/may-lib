
namespace fr.irit.smac.may.lib.components.meta {
	
	import java.lang.*
	import fr.irit.smac.may.lib.interfaces.*

	component Data[T] {
		provides data: Pull[T]
	}
	
	// to explicitely do nothing with a requires, plug it a Void
	component Void[I] {
		provides port: I
	}
	
	/**
	 * This transverse enables to realise collection ports
	 * with integer keys to retrieve the wanted port
	 */
	ecosystem CollectionInteger[I] {
		species Agent {
			requires p: I
			provides idx: Pull[Integer]
		}
		provides get: MapGet[Integer,I]
	}
	
	/**
	 * This transverse enables to realise collection ports
	 * with keys to retrieve the wanted port
	 */
	ecosystem CollectionMap[K,I] {
		species Agent {
			requires p: I
			requires key: Pull[K]
		}

		provides get: MapGet[K,I]
	}
	
	/**
	 * Simply forward a port from the agents to the infrastructure
	 */
	ecosystem Forward[I] {
		species Agent {
			provides a: I
		}

		requires i: I
	}
}