import fr.irit.smac.may.lib.components.collections.Queue
import fr.irit.smac.may.lib.components.scheduling.interfaces.AdvancedExecutor
import fr.irit.smac.may.lib.interfaces.Do
import fr.irit.smac.may.lib.interfaces.Push
import java.util.concurrent.Executor

namespace fr.irit.smac.may.lib.components.controlflow {

	component SequentialDispatcher[T] {
		provides dispatch: Push[T]

		requires executor: Executor

		part queue: Queue[T]

		requires handler: Push[T]
	}
	
	/**
	 * When the component starts,
	 * execute handler as long as stop
	 * is not called
	 */
	component Loop {
		requires executor: AdvancedExecutor
		
		requires handler: Do
		
		provides stop: Do
	}
}
